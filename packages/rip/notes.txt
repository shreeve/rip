
[x] Improve the JS output for arrays (very nice code cleanup!)
[x] Force bare mode, unless otherwise
[x] Remove JSX
[x] Remove .litcoffee and .md.rip
[x] Add our cool regex work
[x] Transform 'is not' â†’ 'isnt'
[x] Allow optional trailing ! for async calls
[x] Rename from Rip to Rip

==[ Use native ?. instead of CS's generated output ]==

Possible speedups:

Are these identically the same or does CS's "?." operator do anything differently?

// ES6
const ranges = lexer.options?.ranges

// CS
ranges = (ref1 = lexer.options) != null ? ref1.ranges : void 0;

Performance: The ES6 optional chaining is slightly faster in modern engines because:

It's a native operator with optimized bytecode
No temporary variable assignment
No ternary expression evaluation

==
