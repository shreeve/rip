// Generated by Rip 3.0.0
var Rip;

// index.rip - Pure ES6 module version for cross-runtime compatibility
// Works with: Node.js, Bun, Deno, and browsers
import * as RipCore from './rip.js';

// Create an enhanced object that includes both core functionality and Node.js-specific methods
Rip = Object.assign({}, RipCore, {
  // Add Node.js-specific methods for CLI compatibility
  run: async function(code, options = {}) {
    var compiled, ref, ref1, vm;
    // Simple implementation for Node.js compatibility
    if (typeof process !== 'undefined' && ((ref = process.versions) != null ? ref.node : void 0)) {
      vm = (await import('vm'));
      compiled = RipCore.compile(code, Object.assign({
        bare: true
      }, options));
      return vm.runInThisContext((ref1 = compiled.js) != null ? ref1 : compiled);
    } else {
      throw new Error('Rip.run is only available in Node.js environments');
    }
  },
  eval: function(code, options = {}) {
    var compiled, func, ref;
    // Simplified eval for compatibility
    if (!(code = code.trim())) {
      return;
    }
    compiled = RipCore.compile(code, Object.assign({
      bare: true
    }, options));
    // Use eval to execute the compiled code
    func = eval;
    return func((ref = compiled.js) != null ? ref : compiled);
  }
});

export * from './rip.js';

// Export the enhanced Rip object as default
export default Rip;
