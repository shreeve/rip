# browser.rip - Complete browser API for Rip
# Provides both manual API and automatic <script type="text/rip"> tag processing
# Works in: Bun, browsers, Deno, and Node.js

import { compile as ripCompile } from './rip'

# Simple helper to extract JS string from compile result
getJS = (result) ->
  if typeof result is 'string' then result else result.js

# ==============================================================================
# Manual API - Programmatic control
# ==============================================================================

# Compile Rip source to JavaScript string
export compile = (code, options = {}) ->
  getJS ripCompile code, Object.assign({ bare: true }, options)

# Run Rip code directly
run = (code, options = {}) ->
  js = compile code, options
  (new Function(js))()

# Load and run a .rip file from URL
load = (url, options = {}) ->
  # Use Bun.file if available (faster), otherwise fetch
  if typeof Bun isnt 'undefined' and Bun.file?
    code = await Bun.file(url).text()
  else
    response = await fetch(url)
    code = await response.text()
  run code, Object.assign({ filename: url }, options)

# ==============================================================================
# Auto-Processing API - <script type="text/rip"> tags
# ==============================================================================

# Process a single <script type="text/rip"> tag
processRipScript = (script) ->
  try
    # Get the Rip source code
    source = script.textContent or script.innerText
    return unless source.trim()

    # Compile to JavaScript
    options =
      bare: true
      filename: script.getAttribute('data-filename') or 'inline.rip'
      sourceMap: false

    js = getJS ripCompile(source, options)

    # Execute the compiled JavaScript in global scope
    globalEval = eval
    globalEval.call(window, js)

  catch error
    console.error "Error in <script type=\"text/rip\">:", error
    throw error

# Process all <script type="text/rip"> tags in the document
processAllRipScripts = ->
  scripts = document.querySelectorAll('script[type="text/rip"]')
  processRipScript(script) for script in scripts
  return

# ==============================================================================
# Auto-run tag processor if we're in a browser with tags
# ==============================================================================

if typeof document isnt 'undefined'
  # Auto-run when DOM is ready (only if there are actually tags to process)
  autoRun = ->
    # Only auto-run if there are <script type="text/rip"> tags
    if document.querySelector('script[type="text/rip"]')
      processAllRipScripts()

  if document.readyState is 'loading'
    document.addEventListener 'DOMContentLoaded', autoRun
  else
    # DOM already loaded, check and run immediately
    autoRun()

# ==============================================================================
# Exports
# ==============================================================================

# Export individual functions
export { run, load, processRipScript, processAllRipScripts }

# Default export with all functionality
export default {
  compile
  run
  load
  processRipScript
  processAllRipScripts
}
