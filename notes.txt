

cd apps/labs/api && sleep 3 && curl -X POST http://localhost:8306/api/execute -H "Content-Type: application/json" -d '{"sql": "SHOW TABLES"}'

==

# Initialize project
bun init

# Web framework ecosystem together
bun add hono @hono/cors @hono/logger @hono/compress @hono/timing

# Since we're using rip-server, we don't need a lot of pieces
bun add @hono/zod-validator zod

# Data & testing tools
bun add @faker-js/faker drizzle-orm

# Development tools
bun add -d drizzle-kit

# Recommended for TypeScript support
bun add -d @types/bun typescript

==

/Users/shreeve/Data/Code/trust/lienstar/api-rip/
├── db/
│   └── schema.ts
├── routes/
│   └── lawfirms.coffee
├── index.coffee
└── bunfig.toml

==

curl http://localhost:3000/lawfirms

==[ index.rip ]==

import { Database } from 'bun:sqlite'  # Built-in, no install needed!
import { drizzle } from 'drizzle-orm/bun-sqlite'
import { Hono } from 'hono'
import { faker } from '@faker-js/faker'

import { zValidator } from '@hono/zod-validator'
import { z } from 'zod'

# Create database connection
db = new Database('app.db')
orm = drizzle(db)

app = new Hono
db = new Database('app.db')
orm = drizzle(db)

export default app

==

bun x biome check --write --unsafe bun/
