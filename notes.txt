
15:40:59  shreeve@hop  ~/Data/Code/trust/sinatra/api> curl -v http://127.0.0.1:4005/ping
*   Trying 127.0.0.1:4005...
* Connected to 127.0.0.1 (127.0.0.1) port 4005
> GET /ping HTTP/1.1
> Host: 127.0.0.1:4005
> User-Agent: curl/8.7.1
> Accept: */*
>
* Request completely sent off
< HTTP/1.1 200 OK
< Date: Thu, 14 Aug 2025 20:41:16 GMT
< Connection: close
< content-type: text/plain;charset=utf-8
< content-length: 33
<
* Closing connection
pong + 2025-08-14 15:41:16.272026

==[ Cool fodder projects ]==

* read method from helpers.rb
* schemazing.rb from latest sinatra app
* DuckDB behind a server allow multiheaded access
* Check out the 'def fmt()' method from src/labs/scripts/...

* sinatra api layer -> rip-api
* rip transpiler for bun -> rip-bun
* add comptime -> rip->lang
* add lalr(1) -> rip-parser
* nginx/unicorn -> rip-server

==

Review the packages/rip-server/README.md file deeply and think about it's structure, the intended reader (a github developer who is evaluating if they should use rip-server for their project) and then read through the code in that directory and make whatever changes you think are necessary to the README.md file in that directory. If the document is already really solid, then don't make any changes. If it could be improved and still kept easy to read and understand and sufficiently informative, then make all needed changes.

==

cd apps/labs/api && sleep 3 && curl -X POST http://localhost:8306/api/execute -H "Content-Type: application/json" -d '{"sql": "SHOW TABLES"}'

==

# Initialize project
bun init

# Web framework ecosystem together
bun add hono @hono/cors @hono/logger @hono/compress @hono/timing

# Since we're using rip-server, we don't need a lot of pieces
bun add @hono/zod-validator zod

# Data & testing tools
bun add @faker-js/faker drizzle-orm

# Development tools
bun add -d drizzle-kit

# Recommended for TypeScript support
bun add -d @types/bun typescript

==

/Users/shreeve/Data/Code/trust/lienstar/api-rip/
├── db/
│   └── schema.ts
├── routes/
│   └── lawfirms.coffee
├── index.coffee
└── bunfig.toml

==

curl http://localhost:3000/lawfirms

==[ index.rip ]==

import { Database } from 'bun:sqlite'  # Built-in, no install needed!
import { drizzle } from 'drizzle-orm/bun-sqlite'
import { Hono } from 'hono'
import { faker } from '@faker-js/faker'

import { zValidator } from '@hono/zod-validator'
import { z } from 'zod'

# Create database connection
db = new Database('app.db')
orm = drizzle(db)

app = new Hono
db = new Database('app.db')
orm = drizzle(db)

export default app

==

bun x biome check --write --unsafe bun/
