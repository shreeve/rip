# Seed script for Labs database

import { drizzle } from 'drizzle-orm/bun-sqlite'
import { Database } from 'bun:sqlite'
import { faker } from '@faker-js/faker'

# Import schema
import schema from './db/schema.rip'
{ users, orders, specimens, results } = schema

# Create database connection
sqlite = new Database './db/labs.db'
db = drizzle sqlite, { schema }

console.log 'ðŸŒ± Seeding database...'

# Create test users
testUsers = []
for i in [1..5]
  user = db.insert(users).values({
    email: if i == 1 then 'test@example.com' else faker.internet.email()
    firstName: faker.person.firstName()
    lastName: faker.person.lastName()
    phone: faker.phone.number()
    sex: faker.helpers.arrayElement(['Male', 'Female', 'Other'])
    dob: faker.date.birthdate({ min: 18, max: 80, mode: 'age' }).toISOString().split('T')[0]
    admin: i == 1  # First user is admin
  }).returning().get!

  testUsers.push user
  console.log "Created user: #{user.email}"

# Create some orders for first user
for i in [1..3]
  order = db.insert(orders).values({
    userId: testUsers[0].id
    number: 'LAB-' + faker.string.alphanumeric(8).toUpperCase()
    payment: faker.helpers.arrayElement(['stripe', 'paypal'])
    subtotal: faker.number.int({ min: 5000, max: 30000 })
    total: faker.number.int({ min: 5000, max: 30000 })
    meta: {
      items: [
        { testId: 1, quantity: 1, name: 'Basic Health Panel' }
      ]
    }
  }).returning().get!

  console.log "Created order: #{order.number}"

# Create some specimens
for user in testUsers[0..2]
  for i in [1..2]
    specimen = db.insert(specimens).values({
      userId: user.id
      testId: faker.number.int({ min: 1, max: 3 })
      barcode: 'SP-' + faker.string.alphanumeric(10).toUpperCase()
      registeredAt: faker.date.recent({ days: 30 })
      collectedAt: faker.datatype.boolean() ? faker.date.recent({ days: 20 }) : null
    }).returning().get!

    console.log "Created specimen: #{specimen.barcode}"

# Create some results
for user in testUsers[0..1]
  result = db.insert(results).values({
    userId: user.id
    resultUrl: 'https://example.com/results/' + faker.string.uuid()
  }).returning().get!

  console.log "Created result for user #{user.email}"

console.log 'âœ… Database seeded successfully!'
console.log ''
console.log 'Test credentials:'
console.log '  Email: test@example.com'
console.log '  (Use auth code flow to login)'